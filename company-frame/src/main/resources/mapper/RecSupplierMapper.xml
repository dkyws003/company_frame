<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.szxx.recruit.mapper.RecSupplierMapper">
  <resultMap id="BaseResultMap" type="com.szxx.recruit.entity.RecSupplier">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="provider_name" jdbcType="VARCHAR" property="providerName" />
    <result column="provider_code" jdbcType="VARCHAR" property="providerCode" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List">
    id, provider_name, provider_code, `status`, create_time, update_time, deleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rec_supplier
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from rec_supplier
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.szxx.recruit.entity.RecSupplier">
    insert into rec_supplier (id, provider_name, provider_code, 
      `status`, create_time, update_time, 
      deleted)
    values (#{id,jdbcType=VARCHAR}, #{providerName,jdbcType=VARCHAR}, #{providerCode,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{deleted,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.szxx.recruit.entity.RecSupplier">
    insert into rec_supplier
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="providerName != null">
        provider_name,
      </if>
      <if test="providerCode != null">
        provider_code,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="providerName != null">
        #{providerName,jdbcType=VARCHAR},
      </if>
      <if test="providerCode != null">
        #{providerCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.szxx.recruit.entity.RecSupplier">
    update rec_supplier
    <set>
      <if test="providerName != null">
        provider_name = #{providerName,jdbcType=VARCHAR},
      </if>
      <if test="providerCode != null">
        provider_code = #{providerCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.szxx.recruit.entity.RecSupplier">
    update rec_supplier
    set provider_name = #{providerName,jdbcType=VARCHAR},
      provider_code = #{providerCode,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="selectAll" resultMap="BaseResultMap"
          parameterType="com.szxx.recruit.vo.req.supplierPageReqVO">
    select
    <include refid="Base_Column_List"></include>
    from rec_supplier
    <where>
      deleted=1
      <if test="id!=null and id!=''">
        AND id LIKE concat('%',#{id},'%')
      </if>
      <if test="startTime!=null and startTime!=''">
        AND create_time &gt;= #{startTime}
      </if>
      <if test="endTime!=null and endTime!=''">
        AND create_time &lt;= #{endTime}
      </if>
      <if test="status!=null and status!='' or status==0 ">
        AND `status`=#{status}
      </if>
    </where>
    order by create_time DESC

  </select>


</mapper>